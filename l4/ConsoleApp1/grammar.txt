ÈíôÇ
Expr LogicExpr LogicMono SecondLogicExpr PrimaryLogicExpr LogicLitera Program Block OperList Oper Tail
~ identifier true false & ! { } ; eps
Program -> Block
Block -> { OperList }
OperList -> Oper Tail
Tail -> ; Oper Tail | eps
Oper -> identifier = Expr | Block
Expr -> LogicExpr
LogicExpr -> LogicMono LogicExpr1
LogicMono -> SecondLogicExpr LogicMono1
SecondLogicExpr -> PrimaryLogicExpr | ~ PrimaryLogicExpr
PrimaryLogicExpr -> LogicLitera | identifier
LogicLitera -> true | false
LogicExpr1 -> ! LogicMono LogicExpr1 | eps
LogicMono1 -> & SecondLogicExpr LogicMono1 | eps

ÎÏÇ
Oper -> identifier Expr = | Block
Expr ->LogicExpr
LogicExpr ->LogicMono LogicExpr1
LogicMono ->SecondLogicExpr LogicMono1 
SecondLogicExpr ->PrimaryLogicExpr | PrimaryLogicExpr ~	\\\\\\\\\\\\\\
PrimaryLogicExpr ->LogicLitera | identifier
LogicLitera ->true | false
LogicOper ->~ | & | !
LogicExpr1 ->LogicMono ! LogicExpr1 | eps				\\\\\\\\\\\\\\
LogicMono1 ->SecondLogicExpr & LogicMono1 | eps			\\\\\\\\\\\\\\
